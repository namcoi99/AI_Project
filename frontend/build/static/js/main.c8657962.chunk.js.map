{"version":3,"sources":["components/Navbar.jsx","containers/Home.jsx","containers/About.jsx","components/RankingCriteria/TableRow.jsx","axios.js","components/RankingCriteria/FormTable.jsx","components/Result.jsx","components/ScoringCriteria/ScoreRow.jsx","components/ScoringCriteria/ScoreTable.jsx","containers/DashBoard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","exact","size","activeStyle","fontWeight","background","Home","useState","index","setIndex","Carousel","fade","activeIndex","onSelect","selectedIndex","e","Item","src","alt","width","height","style","textAlign","padding","About","TableRow","criterion","attributes","marks","handleMark","RadioItems","item","row","id","col","length","type","name","value","checked","onChange","event","target","htmlFor","radioItems","map","attr","scope","axios","create","baseURL","FormTable","expertNum","web","handleData","setMarks","setName","totalMarks","setTotalMarks","count","setCount","show","setShow","alertContent","setContent","selectedCriteriaNum","copyMarks","console","log","listToMatrix","list","elementsPerSubArray","i","k","matrix","push","handleSubmit","a","preventDefault","includes","undefined","criteriaData","window","scrollTo","copyTotalMarks","alert","post","expertsMark","headers","then","res","data","tableRow","attrItems","onClick","max","randomArray","Array","fill","Math","ceil","random","generateRandArr","Alert","variant","onClose","dismissible","Heading","onSubmit","placeholder","required","Result","rank","score","location","reload","ScoreRow","handleScore","min","ScoreTable","selectedCriteria","setScore","scores","setScores","copyScore","scoreRow","filter","indexOf","copyTotalScores","expertsWeight","criteriaWeight","userRatingScore","DashBoard","setNum","registered","setRegistered","doneRanking","setDoneRank","doneScoring","setDoneScore","data1","setData1","data2","setData2","setWeb","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8657962.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { AiOutlineHome, AiOutlineDashboard, AiOutlineInfoCircle, AiOutlineHtml5 } from 'react-icons/ai';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <header className=\"px-3 py-2 bg-dark text-white\">\r\n            <div className=\"container-xxl\">\r\n                <div className=\"d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start\">\r\n                    <NavLink to=\"/\" exact={true} className=\"d-flex align-items-center my-2 my-lg-0 me-lg-auto text-white text-decoration-none\">\r\n                        <AiOutlineHtml5 className=\"bi me-2\" size={50} />\r\n                    </NavLink>\r\n                    <ul className=\"nav col-12 col-lg-auto my-2 justify-content-center my-md-0 text-small\">\r\n                        <li>\r\n                            <NavLink to=\"/\" exact={true} className=\"nav-link text-secondary\" activeStyle={{\r\n                                fontWeight: \"bold\",\r\n                                background: \"white\"\r\n                            }}>\r\n                                <AiOutlineHome className=\"bi d-block mx-auto mb-1\" size={30} />\r\n                  Home\r\n                </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/dashboard\" className=\"nav-link text-secondary\" activeStyle={{\r\n                                fontWeight: \"bold\",\r\n                                background: \"white\"\r\n                            }}>\r\n                                <AiOutlineDashboard className=\"bi d-block mx-auto mb-1\" size={30} />\r\n                  Dashboard\r\n                </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/about\" className=\"nav-link text-secondary\" activeStyle={{\r\n                                fontWeight: \"bold\",\r\n                                background: \"white\"\r\n                            }}>\r\n                                <AiOutlineInfoCircle className=\"bi d-block mx-auto mb-1\" size={30} />\r\n                  About Us\r\n                </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React, { useState } from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\n\r\nconst Home = () => {\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const handleSelect = (selectedIndex, e) => {\r\n        setIndex(selectedIndex);\r\n    };\r\n    return (\r\n        <div className=\"container-xxl\">\r\n            <Carousel fade activeIndex={index} onSelect={handleSelect}>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src=\"https://sudospaces.com/leanhhr-com/2020/08/khoa-hoc-dao-tao-ky-nang-mem.jpg\"\r\n                        alt=\"First slide\"\r\n                        width={900} height={500}\r\n                    />\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src=\"https://loptiengnhat.edu.vn/wp-content/uploads/2017/04/khoa-hoc-tieng-nhat-cap-toc-n5.jpg\"\r\n                        alt=\"Second slide\"\r\n                        width={900} height={500}\r\n                    />\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src=\"https://langmaster.edu.vn/public/templates/public/landing-hoc-tieng-anh-giao-tiep-online-truc-tuyen-cho-nguoi-moi-bat-dau/images/banner_main.jpg\"\r\n                        alt=\"Third slide\"\r\n                        width={900} height={500}\r\n\r\n                    />\r\n                </Carousel.Item>\r\n            </Carousel>\r\n            <h2 className=\"mx-auto\" style={{ textAlign: \"center\", padding: \"50px\" }}>Top educational websites</h2>\r\n            <div className=\"card-group\">\r\n                <div className=\"card\">\r\n                    <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Card title</h5>\r\n                        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                        <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Card title</h5>\r\n                        <p className=\"card-text\">This card has supporting text below as a natural lead-in to additional content.</p>\r\n                        <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Card title</h5>\r\n                        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.</p>\r\n                        <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nfunction TableRow({ criterion, attributes, marks, handleMark }) {\r\n    const RadioItems = ({ item }) => {\r\n        let row = criterion.id - 1;\r\n        let col = item.id - 1;\r\n        let index = row * attributes.length + col;\r\n        return (\r\n            <td>\r\n                <div className=\"form-check\">\r\n                    <input className=\"form-check-input\" type=\"radio\" name={`mark${index}`} id={`mark${index}`} value={1} checked={marks[index] == 1} onChange={event => handleMark(index, event.target.value)} />\r\n                    <label className=\"form-check-label\" htmlFor={`${item.name}1`}>Very negative (1)</label>\r\n                </div>\r\n                <div className=\"form-check\">\r\n                    <input className=\"form-check-input\" type=\"radio\" name={`mark${index}`} id={`mark${index}`} value={2} checked={marks[index] == 2} onChange={event => handleMark(index, event.target.value)} />\r\n                    <label className=\"form-check-label\" htmlFor={`${item.name}2`}>Negative (2)</label>\r\n                </div>\r\n                <div className=\"form-check\">\r\n                    <input className=\"form-check-input\" type=\"radio\" name={`mark${index}`} id={`mark${index}`} value={3} checked={marks[index] == 3} onChange={event => handleMark(index, event.target.value)} />\r\n                    <label className=\"form-check-label\" htmlFor={`${item.name}3`}>Average (3)</label>\r\n                </div>\r\n                <div className=\"form-check\">\r\n                    <input className=\"form-check-input\" type=\"radio\" name={`mark${index}`} id={`mark${index}`} value={4} checked={marks[index] == 4} onChange={event => handleMark(index, event.target.value)} />\r\n                    <label className=\"form-check-label\" htmlFor={`${item.name}4`}>Positive (4)</label>\r\n                </div>\r\n                <div className=\"form-check\">\r\n                    <input className=\"form-check-input\" type=\"radio\" name={`mark${index}`} id={`mark${index}`} value={5} checked={marks[index] == 5} onChange={event => handleMark(index, event.target.value)} />\r\n                    <label className=\"form-check-label\" htmlFor={`${item.name}5`}>Very positive (5)</label>\r\n                </div>\r\n            </td>\r\n        )\r\n    }\r\n    const radioItems = attributes.map(attr => (\r\n        <RadioItems key={attr.id} item={attr} />\r\n    ))\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{criterion.name}</th>\r\n            {radioItems}\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default TableRow;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: `http://sitesranking-backend.herokuapp.com`,\r\n    // withCredentials:true\r\n});","import React, { useEffect, useState, useRef } from 'react';\r\nimport TableRow from './TableRow';\r\nimport criteriaData from '../../data/criteria.json'\r\nimport attributes from '../../data/attributes.json';\r\nimport { Alert } from 'react-bootstrap';\r\nimport axios from '../../axios';\r\n\r\nfunction FormTable({ expertNum, web, handleData }) {\r\n    const [marks, setMarks] = useState([])\r\n    const [name, setName] = useState('')\r\n    const [totalMarks, setTotalMarks] = useState([])\r\n    const [count, setCount] = useState(1)\r\n    const [show, setShow] = useState(false)\r\n    const [alertContent, setContent] = useState('')\r\n    const [selectedCriteriaNum] = useState(3)\r\n\r\n    const handleMark = (index, value) => {\r\n        let copyMarks = [...marks];\r\n        copyMarks[index] = value;\r\n        console.log(index + \": \" + value)\r\n        setMarks(copyMarks);\r\n    }\r\n\r\n    const reset = () => {\r\n        setShow(false)\r\n        setName('')\r\n        setMarks([])\r\n    }\r\n\r\n    const generateRandArr = (event, length, max) => {\r\n        event.preventDefault()\r\n        let randomArray = Array(length).fill().map(() => Math.ceil(Math.random() * max));\r\n        setMarks(randomArray)\r\n    }\r\n\r\n    const listToMatrix = (list, elementsPerSubArray) => {\r\n        var matrix = [], i, k;\r\n\r\n        for (i = 0, k = -1; i < list.length; i++) {\r\n            if (i % elementsPerSubArray === 0) {\r\n                k++;\r\n                matrix[k] = [];\r\n            }\r\n\r\n            matrix[k].push(list[i]);\r\n        }\r\n\r\n        return matrix;\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (marks.includes(undefined) || marks.length !== criteriaData.length * attributes.length) {\r\n            window.scrollTo(0, 0)\r\n            setShow(true)\r\n            setContent(\"You must fill all the mark below.\")\r\n            return;\r\n        }\r\n        const copyTotalMarks = [...totalMarks]\r\n        copyTotalMarks.push(listToMatrix(marks, criteriaData.length))\r\n        setTotalMarks(copyTotalMarks)\r\n        reset()\r\n        alert(`Thanks expert ${name}`)\r\n        window.scrollTo(0, 0)\r\n        if (count >= expertNum) {\r\n            alert(\"Evaluation completed!\")\r\n            // call api\r\n            axios.post('/get_criteria', {\r\n                selectedCriteriaNum: selectedCriteriaNum,\r\n                expertsMark: [...totalMarks,listToMatrix(marks,criteriaData.length)]\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }).then((res) => {\r\n                console.log(res.data)\r\n                handleData(res.data)\r\n            })\r\n        } else {\r\n            setCount(count + 1)\r\n        }\r\n    }\r\n\r\n    const tableRow = criteriaData.map(criterion => {\r\n        return (\r\n            <TableRow key={criterion.id} criterion={criterion} attributes={attributes} marks={marks} handleMark={handleMark} />\r\n        )\r\n    })\r\n    const attrItems = attributes.map(attr => {\r\n        return (\r\n            <th scope=\"col\" key={attr.name}>{attr.name}</th>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <button type=\"button\" className=\"btn btn-outline-dark\" onClick={event => generateRandArr(event, 36, 5)}>Auto fill</button>\r\n            <h2 className=\"text-center\">Website: {web}</h2>\r\n            <Alert show={show} variant=\"danger\" onClose={(event) => setShow(false)} dismissible>\r\n                <Alert.Heading>You got an error!</Alert.Heading>\r\n                <p>\r\n                    {alertContent}\r\n                </p>\r\n            </Alert>\r\n            <form onSubmit={handleSubmit}>\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">The criteria</th>\r\n                            {attrItems}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableRow}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"expertName\" className=\"form-label\">Enter your name*(Expert {count})</label>\r\n                        <input className=\"form-control\" type=\"text\" id=\"expertName\" placeholder=\"Enter your name...\" value={name} required onChange={(event) => setName(event.target.value)} />\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-dark\">Submit</button>\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default FormTable;","import React from 'react';\r\n\r\nconst Result = ({ web, data }) => {\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <h2 className=\"text-center\">Website: {web}</h2>\r\n            <div className=\"col-auto\">\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Rank</th>\r\n                            <th scope=\"col\">Score</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>{data.rank}</th>\r\n                            <th>{data.score}</th>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <button className=\"btn btn-dark\" type=\"button\" onClick={event => window.location.reload()}>Done</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Result;","import React, { useState } from 'react';\r\n\r\nconst ScoreRow = ({ index, score, handleScore, criterion }) => {\r\n\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{criterion.id}</th>\r\n            <th><input className=\"form-control\" type=\"number\" name={`score${index}`} id={`score${index}`} min=\"0\" max=\"100\" id=\"expertScore\" placeholder=\"Enter score...\" value={score[index]} required onChange={(event) => handleScore(event, index, event.target.value)} /></th>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default ScoreRow;","import React, { useState } from 'react';\r\nimport criteriaData from '../../data/criteria.json'\r\nimport ScoreRow from './ScoreRow';\r\nimport axios from '../../axios';\r\n\r\nconst ScoreTable = ({ expertNum, web, data, handleData }) => {\r\n    const [score, setScore] = useState(new Array(data.selectedCriteria.length).fill(0))\r\n    const [scores, setScores] = useState([])\r\n    const [count, setCount] = useState(1)\r\n\r\n    const generateRandArr = (event, length, max) => {\r\n        event.preventDefault()\r\n        let randomArray = Array(length).fill().map(() => Math.ceil(Math.random() * max));\r\n        setScore(randomArray)\r\n    }\r\n\r\n    const handleScore = (event, index, value) => {\r\n        event.preventDefault()\r\n        let copyScore = [...score];\r\n        copyScore[index] = value;\r\n        console.log(index + \": \" + value)\r\n        setScore(copyScore);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const copyTotalScores = [...scores]\r\n        copyTotalScores.push(score)\r\n        setScores(copyTotalScores)\r\n        setScore(new Array(data.selectedCriteria.length).fill(0))\r\n        console.log(scores)\r\n        alert(`Thanks expert`)\r\n        if (count >= expertNum) {\r\n            alert(\"Scoring completed!\")\r\n            // call api\r\n            axios.post('/get_score', {\r\n                expertsWeight: data.expertsWeight,\r\n                criteriaWeight: data.criteriaWeight,\r\n                userRatingScore: [...scores,score]\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }).then((res) => {\r\n                console.log(res.data)\r\n                handleData(res.data)\r\n            })\r\n        } else {\r\n            setCount(count + 1)\r\n        }\r\n    }\r\n\r\n    const scoreRow = criteriaData.filter(criterion => data.selectedCriteria.includes(criterion.id)).map(criterion => (\r\n        <ScoreRow key={criterion.id} index={data.selectedCriteria.indexOf(criterion.id)} criterion={criterion} handleScore={handleScore} score={score} />\r\n    ))\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <h2 className=\"text-center\">Website: {web}</h2>\r\n            <div className=\"col-auto\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Criteria</th>\r\n                                <th scope=\"col\">Score</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {scoreRow}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-dark\">Submit</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-dark\" onClick={event => generateRandArr(event, data.selectedCriteria.length, 100)}>Auto fill</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScoreTable;","import React, { useState } from 'react';\r\nimport FormTable from '../components/RankingCriteria/FormTable';\r\nimport Result from '../components/Result';\r\nimport ScoreTable from '../components/ScoringCriteria/ScoreTable';\r\n\r\nconst DashBoard = () => {\r\n    const [expertNum, setNum] = useState(0)\r\n    const [registered, setRegistered] = useState(false)\r\n    const [doneRanking, setDoneRank] = useState(false)\r\n    const [doneScoring, setDoneScore] = useState(false)\r\n    const [data1, setData1] = useState(undefined)\r\n    const [data2, setData2] = useState(undefined)\r\n    const [web, setWeb] = useState(undefined)\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (expertNum > 0) {\r\n            setRegistered(true)\r\n        }\r\n    }\r\n\r\n    const handleRankedCriteria = (data) => {\r\n        setData1(data)\r\n        setDoneRank(true)\r\n    }\r\n\r\n    const handleRankedWeb = (data) => {\r\n        setData2(data)\r\n        setDoneScore(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-xxl\" style={{ \"padding\": \"40px\" }}>\r\n            <h1 className=\"text-center\">Evaluating Educational Websites</h1>\r\n            {registered === false ? (\r\n                <form onSubmit={handleSubmit}>\r\n                    <label htmlFor=\"expertNum\" className=\"form-label\">Enter number of experts</label>\r\n                    <input type=\"number\" id=\"expertNum\" className=\"form-control\" value={expertNum} required min=\"1\" onChange={(event) => setNum(event.target.value)} />\r\n                    <label htmlFor=\"website\" className=\"form-label\">Enter website</label>\r\n                    <input type=\"text\" id=\"website\" className=\"form-control\" required placeholder=\"ex: hocmai.vn\" onChange={(event) => setWeb(event.target.value)} />\r\n                    <button className=\"btn btn-dark\" type=\"submit\">Submit</button>\r\n                </form>\r\n            ) : doneRanking === false ? (\r\n                <FormTable expertNum={expertNum} web={web} handleData={handleRankedCriteria} />\r\n            ) : doneScoring === false ? (\r\n                <ScoreTable expertNum={expertNum} web={web} data={data1} handleData={handleRankedWeb} />\r\n            ) : <Result web={web} data={data2} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashBoard;","import { useState } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Home from './containers/Home';\r\nimport About from './containers/About';\r\nimport DashBoard from './containers/DashBoard';\r\nimport ScoreTable from './components/ScoringCriteria/ScoreTable';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/dashboard\">\r\n          <DashBoard />\r\n        </Route>\r\n        <Route path=\"/scoreTable\">\r\n          <ScoreTable />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}